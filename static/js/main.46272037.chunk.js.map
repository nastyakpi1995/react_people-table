{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","state","selectedPersonId","_this2","this","person","props","react_default","a","createElement","key","name","className","classNames","PeopleTable__row--selected","id","people__old_65","died","born","onClick","setState","PeopleTable__row","people__Born--Before_1650","people__Died--Before_1800","person--male","sex","person--female","mother","person--father","children","length","father","age","Object","defineProperty","concat","century","join","React","Component","PeopleTable","_ref","people","map","index","src_Person","getFromServerPeople","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","respose","json","stop","apply","arguments","sortBy","sortField","callback","personA","personB","localeCompare","toConsumableArray","sort","App","visualPeople","handleText","someTyp","value","target","_this","prevState","filter","toLowerCase","includes","handleSortReverse","reverse","handleSort","field","getPeople","objectSpread","Math","ceil","kidd","parent","htmlFor","type","onChange","src_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.46272037.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport classNames from 'classnames/bind';\n\nclass Person extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  render() {\n    const { person } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      <tr\n        key={person.name}\n        className={classNames({\n          'PeopleTable__row--selected': person.id === selectedPersonId,\n          people__old_65: ((person.died - person.born) > 65),\n        })}\n        onClick={() => this.setState({ selectedPersonId: person.id })}\n      >\n        <td>\n          {person.id}\n        </td>\n        <td\n          className={classNames({\n            PeopleTable__row: true,\n            'people__Born--Before_1650': person.born < 1650,\n            'people__Died--Before_1800': person.died > 1800,\n          })}\n        >\n          {person.name}\n        </td>\n        <td\n          className={classNames({\n            PeopleTable__row: true,\n            'person--male': person.sex === 'm',\n            'person--female': person.sex === 'f',\n          })}\n        >\n          {person.sex}\n        </td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{person.mother}</td>\n        <td\n          className={classNames({\n            'person--father': person.sex === 'm' && person.children.length > 0,\n          })}\n        >\n          {person.father}\n        </td>\n        <td>{person.age}</td>\n        <td\n          className={classNames({\n            PeopleTable__row: true,\n            [`person--lived-in-${person.century}`]: true,\n          })}\n        >\n          {person.century}\n        </td>\n        <td>\n          {person.children.join(', ')}\n        </td>\n      </tr>\n    );\n  }\n}\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    sex: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    children: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport './App.css';\n\nconst PeopleTable = ({ people }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr className=\"PeopleTable__thead\">\n        <th>id</th>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>mother</th>\n        <th>father</th>\n        <th>age</th>\n        <th>century</th>\n        <th>children</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map((person, index) => (\n        <Person person={person} key={person.id} index={index} />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\nimport PeopleTable from './PeopleTable';\n\nconst getFromServerPeople = async() => {\n  const Api = 'https://mate-academy.github.io/react_people-table/api/';\n  return fetch(`${Api}/people.json`).then(respose => respose.json());\n};\n\nconst sortBy = (people, sortField) => {\n  const sortPeople = {\n    name: (personA, personB) => personA.name.localeCompare(personB.name),\n    age: (personA, personB) => personA.age - personB.age,\n    born: (personA, personB) => personA.born - personB.born,\n    died: (personA, personB) => personA.died - personB.died,\n    id: (personA, personB) => personA.id - personB.id,\n  };\n  const callback = sortPeople[sortField];\n\n  return [...people].sort(callback);\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    sortField: 'name',\n    visualPeople: [],\n  }\n\n  async componentDidMount() {\n    const people = await getFromServerPeople();\n    const getPeople = [...people].map((person, index) => ({\n      ...person,\n      id: index + 1,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      children: [...people]\n        .filter(kidd => kidd.father === person.name\n    || kidd.mother === person.name)\n        .map(parent => parent.name),\n    }));\n\n    this.setState(prev => ({\n      people: [...getPeople],\n      visualPeople: sortBy(getPeople, prev.sortField),\n    }));\n  }\n\n  handleText = (someTyp) => {\n    const { value } = someTyp.target;\n\n    this.setState(prevState => ({\n      people: prevState.visualPeople.filter(\n        person => [person.mother, person.name, person.mother]\n          .join('').toLowerCase().includes(value.toLowerCase())\n      ),\n    }));\n  }\n\n  handleSortReverse = () => {\n    this.setState(prevState => ({\n      people: sortBy(prevState.people).reverse(),\n    }));\n  }\n\n  handleSort = (sortField) => {\n    const { sortField: field } = this.state;\n\n    sortField !== field\n      ? this.setState(prevState => ({\n        people: sortBy(prevState.people, sortField),\n        sortField,\n      }))\n      : this.handleSortReverse();\n  }\n\n  render() {\n    const { people } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n        People table\n          { people.length }\n        </h1>\n        <label htmlFor=\"name__input\">\n            Filter by name:\n          <input\n            type=\"text\"\n            id=\"name__input\"\n            onChange={this.handleText}\n          />\n        </label>\n        <button\n          type=\"button\"\n          onClick={() => this.handleSort('id')}\n        >\n            Sort id\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.handleSort('name')}\n        >\n            Sort name\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.handleSort('age')}\n        >\n            Sort age\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.handleSort('born')}\n        >\n            Sort born\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.handleSort('died')}\n        >\n            Sort died\n        </button>\n        <PeopleTable people={people} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}